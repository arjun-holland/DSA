/*
Given an array arr[] containing both positive and negative integers, the task is to find the length of the largest subarray with a sum equal to 0.

Examples:
Input: arr[] = [15, -2, 2, -8, 1, 7, 10, 23]
Output: 5
Explanation: The largest subarray with a sum of 0 is [-2, 2, -8, 1, 7].

Input: arr[] = [2, 10, 4]
Output: 0


Constraints:
1 ≤ arr.size() ≤ 10^6
−103 ≤ arr[i] ≤ 10^3
*/

/*You are required to complete this function*/

class Solution {
  public:
    int maxLen(vector<int>& arr) {
        int s = 0;
        int ml = 0;
        unordered_map<int,int> mp;
        
        for(int i=0;i<arr.size();i++){
            s += arr[i];
            if(s==0){
                ml = max(ml,i+1);
            }
            else if(mp.find(s)!=mp.end()){
                ml = max(ml,i-mp[s]);
            }else{
                mp[s]=i;
            }
        }
        return ml;
    }
};
