/*
Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example :
Input: s = "leetcode"
Output: 0
Explanation:
The character 'l' at index 0 is the first character that does not occur at any other index.

Constraints:
1 <= s.length <= 10^5
s consists of only lowercase English letters.
*/

#include <bits/stdc++.h>
using namespace std;
class Solution {
public:
    int firstUniqChar(string s) {
        unordered_map<char,int> mp;
        for(char c: s)mp[c]++;

        for(int i=0;i<s.length();i++){
            int f = mp[s[i]];
            if(f == 1)return i;
        }
        return -1;
    }
};


int main() {
	Solution o;
	cout<< o.firstUniqChar("appale");
	return 0;
}
