/*
Given a string s, find the length of the longest substring without duplicate characters.
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
*/

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char,int> mp;
        int ans = 0;
        int j=0,i=0;
        while(i<s.length()){
            if(mp.find(s[i]) != mp.end()){
                j = max(j,mp[s[i]]+1);
            }
            mp[s[i]] = i;
            ans = max(ans,i-j+1);
            i++;
        }
        return ans;
    }
};
